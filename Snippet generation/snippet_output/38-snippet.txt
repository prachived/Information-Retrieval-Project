cacm-2886 : <b>is</b> given <b>which</b> assures <b>that</b> <b>the</b> semantics <b>of</b> any program <b>can</b> be evaluated <b>in</b> <b>a</b> single pass over <b>the</b> derivation tree and an 
cacm-0536 : frequently has <b>the</b> problem <b>of</b> determining <b>a</b> set <b>of</b> values <b>of</b> <b>the</b> ai <b>which</b> minimizes <b>the</b> sum <b>of</b> squares <b>of</b> differences between observed and 
cacm-2247 : mechanism for improving <b>the</b> flexibility ad comprehensibility <b>of</b> <b>a</b> system while allowing <b>the</b> shortening <b>of</b> its development time <b>the</b> effectiveness <b>of</b> <b>a</b> modularization <b>is</b> dependent upon <b>the</b> criteria used <b>in</b> dividing <b>the</b> system into modules <b>a</b> system design problem <b>is</b> presented and both <b>a</b> conventional and unconventional decomposition 
cacm-0435 : <b>is</b> with <b>this</b> somewhat neglected area <b>that</b> <b>the</b> author <b>is</b> <b>interested</b> <b>a</b> method employing <b>a</b> decision matrix <b>is</b> presented for <b>the</b> handling <b>of</b> <b>a</b> standard systems programming problemthat 
cacm-3031 : levels <b>of</b> implementation <b>the</b> major thrust <b>of</b> <b>the</b> paper <b>is</b> twofold first <b>it</b> <b>is</b> shown <b>how</b> <b>the</b> use <b>of</b> algebraic axiomatizations <b>can</b> simplify <b>the</b> process <b>of</b> proving <b>the</b> correctness <b>of</b> an implementation <b>of</b> an abstract data <b>type</b> second semi-automatic tools are 
cacm-3033 : search space since <b>the</b> number <b>of</b> solutions increases with <b>the</b> number <b>of</b> test variables according <b>to</b> <b>a</b> double exponential <b>in</b> <b>this</b> paper we suggest <b>a</b> heuristically guided top-down search 
cacm-1470 : <b>a</b> command <b>is</b> an imperative statement <b>that</b> commands <b>the</b> action <b>to</b> be taken <b>a</b> requirement describes <b>the</b> effect <b>to</b> be achieved without saying 
cacm-1456 : references <b>to</b> <b>the</b> <b>contexts</b> <b>in</b> <b>which</b> <b>it</b> has been used <b>to</b> define other words such 
cacm-3132 : traditional methods find <b>a</b> hyperplane <b>which</b> separates all points <b>in</b> <b>the</b> other <b>but</b> such <b>a</b> hyperplane <b>is</b> <b>not</b> necessarily centered <b>in</b> <b>the</b> empty space between <b>the</b> two classes since <b>a</b> central hyperplane does <b>not</b> favor <b>one</b> class or <b>the</b> other <b>it</b> should have <b>a</b> lower error rate <b>in</b> classifying new points and 
cacm-1856 : these copies <b>to</b> represent <b>the</b> meaning <b>of</b> <b>the</b> new text by <b>this</b> means <b>the</b> meaning <b>of</b> all text <b>the</b> program successfully comprehends <b>is</b> encoded into <b>the</b> same format as <b>that</b> <b>of</b> <b>the</b> memory <b>in</b> <b>this</b> form <b>it</b> <b>can</b> be added into <b>the</b> memory both factual assertions 
cacm-2832 : infrequent relative <b>to</b> retrievals so <b>that</b> data <b>can</b> be cached <b>to</b> speed up retrieval <b>a</b> retrieval <b>is</b> started from <b>the</b> position <b>of</b> <b>the</b> previous retrieval and auxiliary 
cacm-2424 : <b>of</b> <b>a</b> decision implies <b>that</b> every time <b>the</b> decision <b>is</b> made there <b>is</b> <b>a</b> consistency <b>check</b> performed <b>on</b> <b>the</b> decision using independent hardware 
cacm-2931 : explain what are <b>the</b> objects <b>of</b> computation <b>in</b> <b>a</b> way <b>the</b> statics <b>of</b> <b>the</b> problem and <b>how</b> they are <b>to</b> be transformed <b>the</b> dynamics so far <b>the</b> theories <b>of</b> automata and <b>of</b> nets though most <b>in</b> teresting for dynamics have 
cacm-2939 : paper provides an <b>in</b> troduction <b>to</b> <b>the</b> abstraction mechanisms <b>in</b> clu by means <b>of</b> programming examples <b>the</b> utility <b>of</b> <b>the</b> three kinds <b>of</b> abstractions <b>in</b> program construction <b>is</b> illustrated and <b>it</b> <b>is</b> shown <b>how</b> clu programs may be 
cacm-1032 : and <b>the</b> second <b>is</b> <b>a</b> self-generating subset <b>of</b> <b>the</b> file with <b>a</b> high probability <b>of</b> being relevant cacm july 
cacm-2139 : technique <b>is</b> described for implementing <b>the</b> test <b>which</b> determines if <b>one</b> string <b>is</b> <b>a</b> substring <b>of</b> another when there <b>is</b> low probability <b>that</b> <b>the</b> test will be satisfied 
cacm-1625 : <b>on</b> <b>the</b> automatic simplification <b>of</b> source-language programs methods <b>of</b> simplification <b>that</b> <b>can</b> be applied automatically <b>to</b> programs written <b>in</b> an algol-like language are 
cacm-2232 : <b>is</b> demonstrated <b>in</b> <b>this</b> paper <b>which</b> <b>is</b> <b>a</b> review <b>of</b> <b>the</b> width concept <b>in</b> pattern recognition and <b>the</b> geometrical concept itself <b>the</b> object <b>of</b> <b>the</b> work <b>is</b> <b>to</b> clarify <b>how</b> <b>the</b> word description <b>can</b> be made precise so 
cacm-2622 : himself and <b>the</b> system <b>the</b> system compares <b>this</b> password with <b>one</b> recorded <b>in</b> <b>a</b> password table <b>which</b> <b>is</b> available <b>to</b> only <b>the</b> authentication program <b>the</b> integrity <b>of</b> <b>the</b> system depends <b>on</b> keeping <b>the</b> table secret <b>in</b> <b>this</b> paper <b>a</b> password scheme <b>is</b> presented <b>which</b> does <b>not</b> require secrecy <b>in</b> <b>the</b> computer all aspects <b>of</b> <b>the</b> system including all relevant 
cacm-1536 : values <b>of</b> <b>the</b> derivatives <b>of</b> <b>the</b> real parts <b>this</b> technique provides <b>a</b> simple way <b>to</b> compute <b>the</b> derivatives <b>of</b> <b>a</b> function without <b>the</b> need for deriving and 
cacm-2582 : <b>is</b> managed according <b>to</b> <b>a</b> working set strategy <b>it</b> <b>is</b> based <b>on</b> <b>the</b> concept <b>of</b> critical working set <b>a</b> working set <b>which</b> does <b>not</b> contain <b>the</b> next memory reference <b>the</b> data <b>the</b> method operates upon are 
cacm-1806 : analytical an introduction <b>to</b> <b>this</b> method <b>is</b> given and <b>a</b> critical review <b>of</b> relating <b>literature</b> <b>is</b> presented although <b>in</b> theory <b>the</b> method always converges <b>it</b> <b>is</b> shown <b>that</b> <b>a</b> fundamental dilemma exists <b>which</b> may cause <b>a</b> breakdown <b>in</b> practical applications <b>to</b> <b>avoid</b> <b>this</b> difficulty and <b>to</b> improve <b>the</b> rate <b>of</b> convergence toward <b>a</b> root some modifications <b>of</b> <b>the</b> original method are proposed 
cacm-2905 : static sets <b>a</b> refinement <b>of</b> hashing <b>which</b> allows retrieval <b>of</b> an item <b>in</b> <b>a</b> static table with <b>a</b> single probe <b>is</b> considered given <b>a</b> set i <b>of</b> identifiers two methods are 
cacm-1003 : <b>the</b> heat produced by <b>this</b> reaction <b>the</b> program <b>is</b> based <b>on</b> <b>a</b> direct statement <b>of</b> fouriers law <b>of</b> heat conduction and <b>the</b> chemical rate equation <b>to</b> provide <b>a</b> bookkeeping law <b>to</b> follow <b>the</b> reactants and <b>the</b> flow <b>of</b> heat packets <b>in</b> such <b>a</b> way <b>that</b> <b>the</b> computer continually stores <b>the</b> heat distribution <b>a</b> computer analysis method <b>is</b> here regarded as <b>one</b> <b>in</b> <b>which</b> <b>the</b> physical laws <b>of</b> <b>a</b> process are used explicitly 
cacm-2109 : search size because <b>of</b> <b>the</b> property <b>of</b> quadratic residues <b>is</b> limited <b>to</b> <b>one</b> half <b>of</b> <b>the</b> storage table <b>it</b> <b>is</b> shown <b>that</b> for some classes <b>of</b> prime numbers <b>the</b> complement <b>of</b> <b>the</b> set <b>of</b> quadratic residues <b>can</b> easily be determined and 
cacm-2341 : snobol4 <b>a</b> block <b>is</b> <b>a</b> three-dimensional aggregate <b>of</b> characters <b>in</b> <b>the</b> form <b>of</b> <b>a</b> right parallelepiped best thought 
cacm-2233 : <b>the</b> benefit <b>of</b> <b>the</b> uninitiated <b>the</b> encoding method used <b>in</b> <b>the</b> second cypher employs <b>a</b> specified document whose words 
cacm-2342 : these solutions <b>in</b> <b>this</b> paper <b>a</b> system <b>of</b> parallel processes <b>is</b> regarded as <b>a</b> machine <b>which</b> proceeds from <b>one</b> state s ie <b>a</b> collection <b>of</b> pertinent data values and 
cacm-1939 : be <b>of</b> practical interest <b>a</b> solution <b>is</b> offered <b>in</b> <b>the</b> form <b>of</b> <b>a</b> computer program <b>which</b> allows <b>the</b> user <b>to</b> constrain and direct <b>the</b> generation by <b>the</b> simple <b>but</b> powerful device <b>of</b> restricted subtrees <b>the</b> program <b>is</b> <b>a</b> directed random generator <b>which</b> accepts as input <b>a</b> subtree with restrictions and 
cacm-0616 : report-language structure group <b>of</b> <b>the</b> codasyl development committee <b>this</b> report represents <b>the</b> results <b>of</b> <b>the</b> first phase <b>of</b> <b>the</b> work <b>of</b> <b>the</b> language structure group <b>the</b> goal <b>of</b> <b>this</b> work <b>is</b> <b>to</b> arrive at <b>a</b> proper structure for <b>a</b> machine-independent problem-defining language at 
cacm-1323 : compiler into <b>the</b> abstract objct language <b>this</b> <b>is</b> itself presented <b>in</b> <b>a</b> purely functional notation <b>that</b> <b>is</b> <b>one</b> using only application and 
cacm-0492 : <b>which</b> <b>is</b> <b>one</b> less than <b>the</b> number <b>of</b> probes required <b>to</b> address <b>a</b> record <b>is</b> computed <b>on</b> <b>the</b> basis <b>of</b> <b>a</b> markov chain model for 
cacm-1931 : smith have shown <b>how</b> interval arithmetic i <b>can</b> be used effectively <b>to</b> bound errors <b>in</b> matrix computations <b>in</b> <b>the</b> present paper <b>a</b> method proposed by hasen 
cacm-0497 : <b>the</b> problem comprises <b>the</b> determination given n <b>of</b> <b>the</b> n points <b>of</b> subdivision <b>of</b> <b>a</b> given interval ab and 
cacm-2184 : terms <b>of</b> <b>the</b> same basic concepts <b>in</b> order <b>to</b> identify <b>the</b> extent <b>to</b> <b>which</b> they overlap <b>it</b> <b>is</b> suggested <b>that</b> there <b>is</b> some similarity between <b>the</b> idea <b>of</b> <b>a</b> file directory and <b>a</b> storable object <b>of</b> <b>type</b> context manipulations with <b>contexts</b> are then discussed at 
cacm-0071 : trivial <b>one</b> while <b>this</b> assumption <b>is</b> somewhat unrealistic <b>it</b> <b>is</b> intended <b>to</b> provide an opportunity <b>to</b> concentrate <b>on</b> <b>the</b> other aspects <b>of</b> program construction <b>the</b> programming system should stress 
cacm-2289 : major challenge <b>in</b> <b>the</b> effective use <b>of</b> cellular arrays for <b>the</b> solution <b>of</b> graph problems <b>is</b> <b>the</b> determination <b>of</b> algorithms <b>that</b> exploit <b>the</b> possibilities for parallelism especially 
cacm-2912 : <b>is</b> considered <b>it</b> <b>is</b> assumed <b>that</b> only <b>one</b> process at <b>a</b> time <b>can</b> modify <b>the</b> data <b>but</b> concurrent reading and writing 
cacm-2846 : pointer <b>the</b> fields <b>in</b> <b>a</b> c-trie are only <b>one</b> bit long <b>in</b> <b>the</b> analysis part <b>of</b> <b>the</b> paper <b>it</b> will be shown <b>that</b> for <b>a</b> collection <b>of</b> n keys <b>the</b> retrieval time measured <b>in</b> terms <b>of</b> bit inspections <b>of</b> <b>one</b> key <b>is</b> <b>of</b> <b>the</b> order logmn and <b>the</b> storage requirement <b>of</b> <b>the</b> order nm+log2 n bits 
cacm-1014 : variance <b>a</b> major problem <b>in</b> using <b>the</b> analysis <b>of</b> variance as <b>the</b> number <b>of</b> factors increases <b>is</b> <b>the</b> exponential rise <b>in</b> <b>the</b> number <b>of</b> interactions even though <b>the</b> experimenter may <b>not</b> be <b>interested</b> <b>in</b> these interactions <b>it</b> <b>is</b> impossible <b>to</b> ignore them <b>in</b> most experimental designs because 
cacm-3060 : fortran 77 there <b>is</b> <b>a</b> new standard fortran <b>the</b> official title <b>is</b> american national standard programming 
cacm-2358 : <b>the</b> size <b>of</b> main memory <b>on</b> contemporary systems <b>is</b> rather limited <b>it</b> <b>is</b> then shown <b>how</b> <b>the</b> multics software achieves <b>the</b> effect <b>of</b> <b>a</b> large segmented main memory 
cacm-2356 : necessary <b>to</b> meet <b>the</b> first goal <b>the</b> technique <b>is</b> illustrated by means <b>of</b> <b>a</b> variety <b>of</b> examples from <b>a</b> tutorial system cacm may 
cacm-3069 : algorithm <b>is</b> unique <b>in</b> <b>that</b> <b>it</b> <b>can</b> compute all <b>of</b> <b>this</b> information <b>in</b> <b>a</b> single pass <b>not</b> requiring <b>a</b> prepass <b>to</b> compute calling relationships or 
cacm-3103 : <b>a</b> library <b>of</b> implementations <b>is</b> discussed <b>this</b> process <b>is</b> discussed <b>in</b> detail for an example 
cacm-3105 : mechanisms <b>this</b> paper shows <b>how</b> <b>to</b> extend programming languages <b>to</b> provide controlled sharing <b>the</b> extension permits expression <b>of</b> access constraints <b>on</b> shared data access constraints 
cacm-1643 : an improvement <b>to</b> iterative methods <b>of</b> polynomial factorization methods <b>of</b> polynomial factorization <b>which</b> find <b>the</b> zeros <b>one</b> at <b>a</b> time require <b>the</b> division <b>of</b> <b>the</b> polynomial by <b>the</b> accepted factor <b>it</b> <b>is</b> shown <b>how</b> <b>the</b> accuracy <b>of</b> <b>this</b> division may be increased 
cacm-1727 : <b>one</b> way <b>of</b> estimating frequencies <b>of</b> jumps <b>in</b> <b>a</b> program for <b>the</b> segmentation <b>of</b> <b>a</b> program <b>it</b> <b>is</b> useful <b>to</b> have <b>a</b> reasonable estimation <b>of</b> <b>the</b> values <b>of</b> sij where sij <b>is</b> <b>the</b> mean value <b>of</b> <b>the</b> number <b>of</b> jumps from <b>the</b> i-th instruction <b>on</b> <b>to</b> <b>the</b> j-th instruction <b>in</b> <b>the</b> run time <b>in</b> <b>the</b> cases where <b>the</b> sij are estimated directly 
cacm-0675 : able <b>to</b> handle <b>the</b> results <b>of</b> every laboratory test <b>that</b> they have encountered <b>the</b> unique feature <b>of</b> these codes <b>is</b> <b>that</b> they <b>can</b> accept conventionally recorded qualitative 
cacm-3177 : <b>how</b> <b>to</b> share <b>a</b> secret <b>in</b> <b>this</b> paper we show <b>how</b> <b>to</b> divide data d into 
cacm-0670 : some legal implications <b>of</b> <b>the</b> use <b>of</b> computers <b>in</b> <b>the</b> banking business <b>the</b> introduction <b>of</b> computers <b>in</b> <b>to</b> <b>the</b> banking business has <b>a</b> wide variety <b>of</b> legal implications <b>that</b> merit careful attention at 
cacm-1867 : <b>the</b> replacement-selecting technique <b>of</b> sorting <b>one</b> <b>is</b> <b>interested</b> <b>in</b> <b>the</b> ratio lj <b>of</b> <b>the</b> expected length <b>of</b> <b>the</b> j-th sequence generated by 
cacm-1861 : <b>on</b> much <b>of</b> <b>the</b> motivation behind <b>the</b> form <b>in</b> <b>which</b> definitions are written some 
cacm-3082 : <b>a</b> distributed system <b>is</b> examined and <b>is</b> shown <b>to</b> define <b>a</b> partial ordering <b>of</b> <b>the</b> events <b>a</b> distributed algorithm <b>is</b> given for synchronizing <b>a</b> system <b>of</b> logical clocks <b>which</b> <b>can</b> be used <b>to</b> totally order <b>the</b> events <b>the</b> use <b>of</b> <b>the</b> total ordering <b>is</b> illustrated with <b>a</b> method for solving synchronization 
cacm-0106 : <b>but</b> inefficient solution <b>to</b> <b>the</b> problem <b>the</b> present paper describes <b>a</b> general method <b>which</b> enables efficient erasure <b>the</b> method employs interspersed reference 
cacm-0867 : by gluss <b>to</b> determine <b>the</b> closet fit <b>of</b> broken line segments <b>to</b> <b>a</b> curve <b>in</b> an interval under <b>the</b> constraint <b>that</b> <b>the</b> number <b>of</b> segments <b>is</b> fixed <b>in</b> <b>the</b> present paper successive models 
cacm-2572 : utilities are examined <b>in</b> <b>this</b> framework and <b>the</b> conclusion <b>is</b> drawn <b>that</b> society <b>is</b> <b>not</b> yet <b>in</b> <b>a</b> position <b>to</b> justify either <b>the</b> construction <b>of</b> an information utility <b>in</b> <b>a</b> prototype community or <b>the</b> acceptance <b>of</b> <b>a</b> policy <b>in</b> favor <b>of</b> its widespread implementation cacm 
cacm-2208 : <b>is</b> performed by <b>a</b> hashing algorithm <b>the</b> utilization <b>of</b> storage <b>is</b> studied <b>in</b> <b>a</b> two-level memory hierarchy <b>the</b> first storage level <b>which</b> <b>is</b> <b>the</b> fast store <b>is</b> divided into <b>a</b> number <b>of</b> storage areas when an 
cacm-2470 : <b>to</b> be definable <b>in</b> <b>the</b> system <b>it</b> <b>is</b> described <b>how</b> <b>the</b> local environment <b>can</b> be modeled as <b>a</b> data item and <b>how</b> imperative statements <b>can</b> be considered functions <b>on</b> <b>the</b> environment <b>the</b> nature <b>of</b> recursive functions <b>is</b> briefly discussed and <b>a</b> technique <b>is</b> presented by <b>which</b> they <b>can</b> be introduced into <b>the</b> system <b>the</b> technique <b>is</b> contrasted with <b>the</b> use <b>of</b> <b>the</b> paradoxical combinator y <b>the</b> <b>questions</b> <b>of</b> local and global environments 
cacm-2369 : <b>which</b> are invisible when <b>the</b> objects are rotated <b>about</b> some axis <b>this</b> paper describes <b>a</b> polygon comparison scheme <b>in</b> <b>which</b> <b>the</b> relationships <b>of</b> two polygons <b>can</b> be classified into tree 
cacm-2167 : algebraic simplification <b>a</b> guide for <b>the</b> perplexed algebraic simplification <b>is</b> examined first from <b>the</b> point <b>of</b> view <b>of</b> <b>a</b> user who needs <b>to</b> comprehend <b>a</b> large expression and second 
cacm-1497 : down <b>to</b> <b>a</b> smaller range <b>of</b> divisors provided <b>the</b> magnitude <b>of</b> <b>the</b> character next <b>to</b> <b>the</b> leading character <b>of</b> <b>the</b> divisor <b>is</b> known if however <b>the</b> normalization <b>is</b> <b>to</b> be eliminated <b>one</b> has <b>to</b> choose proper higher precision 
cacm-2851 : shown <b>to</b> be incomplete <b>a</b> formalization <b>of</b> deadlock <b>is</b> then presented <b>the</b> concept <b>of</b> <b>a</b> norm <b>is</b> introduced <b>which</b> yields an extension <b>to</b> <b>the</b> deadlock problem <b>of</b> floyds technique for proving 
cacm-1549 : routine for implementing <b>this</b> algorithm <b>can</b> be written <b>in</b> <b>the</b> list language with <b>which</b> <b>it</b> <b>is</b> <b>to</b> be used thus insuring 
cacm-0595 : be possessed by <b>the</b> programmer <b>the</b> teaching problem arises <b>in</b> determining <b>how</b> thoroughly <b>a</b> student must know <b>the</b> hardware and logic for 
cacm-1413 : <b>about</b> <b>the</b> social response <b>to</b> potential technological change <b>the</b> object <b>of</b> <b>this</b> paper <b>is</b> <b>to</b> present <b>a</b> vision <b>of</b> potential educational technology and 
cacm-2970 : achieving specific accuracy <b>in</b> simulation output analysis <b>this</b> paper extends <b>the</b> use <b>of</b> <b>the</b> regenerative property <b>of</b> queueing systems <b>in</b> <b>the</b> analysis <b>of</b> simulation output <b>in</b> particular <b>it</b> describes <b>a</b> sequential estimation method <b>which</b> when used with <b>the</b> regenerative property allows results 
cacm-3142 : <b>the</b> end targets <b>of</b> <b>a</b> computerized process <b>is</b> assessed <b>how</b> many and what <b>type</b> <b>of</b> errors occur <b>how</b> easily are they corrected 
cacm-1170 : new sentence <b>it</b> encountered <b>it</b> was concluded <b>that</b> <b>the</b> system <b>is</b> adequate for learning <b>to</b> parse <b>the</b> bulk <b>of</b> basic english <b>but</b> <b>that</b> further development <b>is</b> required before conclusions <b>about</b> its application <b>to</b> ordinary english <b>can</b> be stored <b>the</b> system <b>is</b> operational and available <b>on</b> <b>the</b> arpa/sdc time-shared computing system 
cacm-1572 : are few guides <b>to</b> assist <b>in</b> <b>the</b> analysis <b>of</b> performance characteristics <b>the</b> development <b>of</b> <b>a</b> comprehensive simulation model <b>to</b> assist <b>in</b> <b>the</b> investigation <b>of</b> these <b>questions</b> <b>is</b> described <b>in</b> <b>this</b> paper <b>the</b> resulting model has <b>a</b> general purpose design and 
cacm-2705 : with incidents <b>of</b> <b>the</b> history <b>of</b> artificial auxiliary languages <b>it</b> <b>is</b> suggested <b>that</b> fortran and cobol will 
cacm-3002 : into subrecords <b>that</b> are stored <b>on</b> different devices <b>one</b> <b>of</b> <b>the</b> subrecords <b>is</b> designated as <b>the</b> primary record when <b>a</b> request for <b>a</b> record <b>is</b> made <b>the</b> primary record <b>is</b> first accessed and other 
cacm-2176 : <b>is</b> presented here <b>which</b> minimizes <b>the</b> number <b>of</b> input-output operations for <b>a</b> given order <b>of</b> merge when sorting <b>on</b> movable arm disks <b>the</b> number <b>of</b> seeks <b>is</b> equal <b>to</b> <b>the</b> number <b>of</b> input-output operations and <b>the</b> seek time usually controls 
cacm-1469 : family <b>of</b> unimplemented computing languages <b>is</b> described <b>that</b> <b>is</b> intended <b>to</b> span differences <b>of</b> application area by <b>a</b> unified framework <b>this</b> framework dictates <b>the</b> rules <b>about</b> <b>the</b> uses <b>of</b> user-coined names and <b>the</b> conventions <b>about</b> characterizing functional relationships within 
cacm-1408 : question <b>of</b> <b>the</b> efficacy <b>of</b> <b>the</b> drum scheme <b>is</b> then raised <b>to</b> deal with <b>this</b> <b>a</b> standard <b>of</b> efficiency <b>is</b> developed <b>in</b> light <b>of</b> realistic real-time circumstances <b>the</b> drum scheme <b>is</b> then modelled <b>in</b> <b>a</b> manner <b>which</b> permits <b>it</b> <b>to</b> be analyzed as <b>a</b> problem <b>in</b> queueing theory thus <b>one</b> <b>is</b> enabled <b>to</b> ascertain whether <b>the</b> drum scheme <b>is</b> efficient enough for its 
cacm-0321 : <b>that</b> once <b>the</b> report <b>is</b> explained <b>it</b> <b>is</b> <b>in</b> fact easy <b>to</b> learn algol and <b>to</b> write algorithms <b>in</b> <b>it</b> <b>the</b> language <b>is</b> so general and powerful 
cacm-2390 : <b>of</b> <b>the</b> problems created by <b>the</b> explosion <b>of</b> papers <b>in</b> <b>the</b> mathematical sciences and <b>the</b> drawbacks <b>that</b> <b>this</b> places <b>on</b> research <b>it</b> <b>is</b> suggested <b>that</b> <b>a</b> tree <b>of</b> all mathematical results and 
cacm-1162 : provide <b>a</b> one-for-one translation from <b>a</b> symbolic <b>to</b> <b>a</b> numeric version <b>of</b> <b>a</b> program <b>that</b> <b>is</b> from assembly language <b>to</b> machine language <b>the</b> meta-language presented here <b>can</b> be used <b>to</b> specify <b>the</b> mapping <b>of</b> any language <b>which</b> conforms <b>to</b> <b>a</b> canonical list form into 
cacm-2941 : types and <b>type</b> coercions <b>the</b> benefits <b>of</b> <b>the</b> <b>type</b> system and why <b>it</b> <b>is</b> breached occasionally and <b>the</b> difficulty <b>of</b> making <b>the</b> treatment <b>of</b> variant records safe cacm 
cacm-2145 : wiring <b>one</b> <b>is</b> <b>the</b> heuristic method <b>which</b> simulates human approaches <b>to</b> wiring design and <b>the</b> other <b>is</b> <b>the</b> theoretically interesting <b>but</b> time-consuming method <b>of</b> maze-running based <b>on</b> <b>the</b> lees algorithm help performs 
cacm-2305 : writing what today <b>is</b> termed <b>a</b> program although <b>this</b> early approach <b>to</b> <b>a</b> programming language did <b>not</b> lead <b>to</b> practical use <b>the</b> plan <b>is</b> described here because <b>it</b> contains features <b>that</b> are standard <b>in</b> todays programming languages <b>the</b> investigation <b>is</b> <b>of</b> historical interest also <b>it</b> may provide insights <b>that</b> would lead <b>to</b> advancements <b>in</b> <b>the</b> state <b>of</b> <b>the</b> art using modern programming 
cacm-2876 : its realization <b>is</b> discussed <b>it</b> <b>is</b> shown <b>that</b> intentional resolution <b>can</b> be achieved <b>but</b> <b>that</b> <b>it</b> involves <b>a</b> radical change from <b>the</b> traditional approach <b>to</b> <b>the</b> process <b>of</b> user-database interaction <b>in</b> particular <b>it</b> appears <b>to</b> be necessary for <b>the</b> database <b>to</b> impose <b>a</b> certain amount <b>of</b> control over <b>the</b> internal behavior <b>of</b> users programs <b>which</b> interact with <b>it</b> <b>a</b> model for user-database interaction 
cacm-3014 : <b>it</b> <b>is</b> shown <b>how</b> <b>the</b> intermittent-assertion method <b>can</b> be applied <b>to</b> prove <b>the</b> validity <b>of</b> program transformations and <b>the</b> correctness <b>of</b> continuously operating programs cacm 
cacm-2499 : <b>not</b> required <b>to</b> meet <b>a</b> response criterion <b>in</b> <b>a</b> multiprogrammed system <b>it</b> may serve maximal resource 
cacm-1698 : <b>to</b> perform computations efficiently <b>it</b> <b>is</b> quite difficult <b>to</b> characterize <b>a</b> particular user <b>but</b> rather easy <b>to</b> characterize <b>the</b> <b>entire</b> user community based <b>on</b> <b>the</b> properties <b>of</b> <b>this</b> community we have postulated 
cacm-1359 : by <b>the</b> use <b>of</b> procedural directives <b>the</b> sequence <b>of</b> procedural directives <b>is</b> derived from <b>a</b> job assumed <b>to</b> be expressed <b>in</b> <b>a</b> user-oriented source language each 
cacm-2956 : notion <b>that</b> <b>a</b> data <b>type</b> <b>is</b> <b>a</b> set <b>of</b> values together with <b>a</b> set <b>of</b> primitive operations <b>on</b> those values among these 
cacm-2958 : examples presented <b>is</b> <b>a</b> top-down development <b>of</b> <b>a</b> symbol table for <b>a</b> block structured language <b>a</b> discussion <b>of</b> <b>the</b> proof <b>of</b> its correctness <b>is</b> given <b>the</b> paper also contains <b>a</b> brief discussion <b>of</b> <b>the</b> problems involved <b>in</b> constructing algebraic specifications <b>that</b> are both consistent and 
cacm-2196 : many <b>of</b> todays heuristics <b>but</b> <b>it</b> <b>is</b> asked <b>to</b> organize <b>the</b> data for <b>the</b> human so <b>that</b> <b>the</b> human <b>can</b> solve <b>the</b> problem easily <b>the</b> technique used <b>in</b> <b>this</b> paper seems <b>to</b> point <b>to</b> new directions <b>in</b> <b>the</b> field <b>of</b> man-machine interaction and <b>in</b> <b>the</b> field <b>of</b> artificial intelligence cacm may 
cacm-2989 : having or <b>not</b> having <b>the</b> feature <b>the</b> methods are based <b>on</b> analysis <b>of</b> traces <b>of</b> program executions <b>the</b> concept <b>of</b> <b>a</b> register life <b>is</b> <b>in</b> troduced and used <b>to</b> answer <b>questions</b> like <b>how</b> many registers are used 
cacm-2082 : idea <b>is</b> 1 <b>to</b> use <b>the</b> <b>phrase</b> structure <b>of</b> <b>a</b> program <b>to</b> define <b>the</b> structure <b>of</b> <b>a</b> formal documentation for <b>that</b> program 2 <b>to</b> use <b>the</b> syntactic types and identifiers 
cacm-1768 : <b>the</b> language or indicate <b>that</b> <b>the</b> given sentence <b>is</b> invalid <b>is</b> described <b>the</b> parser <b>is</b> <b>of</b> <b>the</b> top-to-bottom <b>type</b> and <b>is</b> recursive <b>a</b> number <b>of</b> heuristic procedures whose purpose 
cacm-1769 : are basic <b>to</b> all progress with <b>the</b> computer <b>this</b> complex <b>but</b> powerful tool <b>is</b> <b>the</b> most important <b>one</b> available <b>to</b> governments and scientists <b>to</b> use <b>in</b> studying <b>the</b> problems being created by 
cacm-3148 : wide range <b>of</b> tasks <b>this</b> <b>is</b> part <b>of</b> an ambitious program <b>of</b> development <b>in</b> advanced programming languages and 
cacm-2867 : modularization and hierarchy <b>in</b> <b>a</b> family <b>of</b> operating systems <b>this</b> paper describes <b>the</b> design philosophy used <b>in</b> <b>the</b> construction <b>of</b> <b>a</b> family <b>of</b> operating systems <b>it</b> <b>is</b> shown <b>that</b> <b>the</b> concepts <b>of</b> <b>module</b> and level do <b>not</b> coincide <b>in</b> <b>a</b> hierarchy <b>of</b> functions family members <b>can</b> share much software as 
cacm-2480 : teaching <b>about</b> programming <b>this</b> paper presents <b>the</b> goals and organization <b>of</b> <b>a</b> course <b>about</b> programming designed <b>to</b> provide entering students <b>in</b> <b>a</b> graduate program with <b>a</b> cultural enrichment <b>in</b> their professional lives <b>the</b> students are expected <b>to</b> have taken at least 
cacm-2002 : replacing modules <b>the</b> basic syntax <b>of</b> amesplot <b>is</b> outlined and <b>a</b> brief description <b>is</b> given <b>of</b> its current utility software 
cacm-0483 : stated restrictions <b>it</b> <b>is</b> shown <b>that</b> no formal mechanisms <b>of</b> <b>the</b> <b>type</b> used are sufficient <b>to</b> define algol 60 cacm 
cacm-1847 : <b>to</b> <b>that</b> <b>of</b> welch <b>in</b> terms <b>of</b> speed <b>it</b> <b>is</b> similar <b>to</b> <b>that</b> <b>of</b> welch and superior <b>to</b> <b>that</b> <b>of</b> gotlieb and corneil testsshow 
cacm-1846 : none <b>can</b> be found <b>in</b> some <b>of</b> <b>the</b> latter cases <b>it</b> <b>is</b> shown <b>to</b> be possible <b>to</b> find <b>a</b> solution by extending <b>the</b> information available <b>to</b> <b>the</b> solution technique <b>but</b> <b>in</b> many cases <b>the</b> technique becomes computationally unfeasible 
