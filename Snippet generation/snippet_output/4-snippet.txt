cacm-1829 : take <b>the</b> place <b>of</b> manual actions thus <b>the</b> human <b>and</b> program can interact <b>on</b> <b>a</b> symmetrical <b>and</b> equal basis through <b>the</b> medium <b>of</b> <b>the</b> graphic monitor <b>the</b> choice made <b>in</b> designing <b>the</b> graphic monitor given <b>the</b> constraints <b>of</b> <b>the</b> existing hardware <b>and</b> computer system <b>are</b> discussed <b>the</b> structure <b>of</b> <b>the</b> monitor program <b>and</b> <b>the</b> human <b>and</b> program interfaces <b>are</b> described there is also 
cacm-1905 : standard computer implementations <b>of</b> dantzigs simplex method <b>for</b> linear programming <b>are</b> based upon forming <b>the</b> inverse <b>of</b> <b>the</b> basic matrix <b>and</b> updating <b>the</b> inverse after every step 
cacm-1908 : nonprogrammers <b>are</b> using <b>the</b> computer <b>as</b> an aid <b>in</b> decision-making <b>and</b> problem-solving <b>rather</b> than <b>as</b> <b>a</b> programming end <b>in</b> itself statistically <b>and</b> logically significant results indicate 
cacm-2920 : flowchart <b>of</b> need-defined steps <b>a</b> global approach <b>to</b> <b>the</b> phenomenon <b>and</b> its <b>in</b> terpretation <b>as</b> <b>a</b> game <b>between</b> <b>the</b> operating system <b>and</b> <b>the</b> processes allows formalization <b>of</b> risk <b>and</b> safety concepts <b>the</b> bipartite graph representation <b>of</b> this game may then 
cacm-2439 : <b>without</b> requiring any changes <b>in</b> <b>the</b> system executive <b>or</b> <b>in</b> any <b>of</b> <b>the</b> systems compilers <b>or</b> interpreters cacm october 1973 
cacm-2438 : <b>of</b> that storage <b>for</b> durations <b>not</b> necessarily tied <b>to</b> control flow <b>the</b> technique has <b>the</b> property that <b>in</b> <b>the</b> simple caseit runs identically 
cacm-2929 : optimization consists <b>of</b> replacing <b>a</b> <b>procedure</b> invocation by <b>a</b> modified copy <b>of</b> <b>the</b> <b>procedure</b> body <b>the</b> general problem <b>of</b> using inline substitution <b>to</b> minimize execution time subject 
cacm-1458 : <b>in</b> <b>the</b> processes related <b>to</b> producing <b>and</b> checking out programs <b>in</b> <b>the</b> main it it <b>not</b> <b>the</b> programming language itself which 
cacm-0435 : systems etc since <b>the</b> implementation <b>of</b> <b>of</b> new methods <b>and</b> procedures is <b>not</b> instantaneous <b>but</b> <b>rather</b> occurs by an evolutionary 
cacm-1180 : an assertion table <b>the</b> process <b>of</b> definition includes <b>the</b> special case <b>of</b> recursive assertions several <b>complete</b> programs <b>of</b> imperatives <b>are</b> given <b>to</b> show <b>a</b> few applications <b>of</b> <b>the</b> language cacm november 1965 
cacm-2632 : <b>of</b> any <b>of</b> <b>the</b> operations defined <b>with</b> respect <b>to</b> that type <b>of</b> object <b>the</b> <b>mechanisms</b> provide <b>a</b> coherent basis <b>for</b> extension <b>of</b> <b>the</b> system <b>in</b> two directions <b>the</b> introduction <b>of</b> new facilities <b>and</b> <b>the</b> creation <b>of</b> highly secure systems cacm 
cacm-1506 : by means <b>of</b> <b>a</b> dialogue <b>between</b> <b>a</b> system user <b>and</b> <b>a</b> retrieval application <b>the</b> monitor was designed so 
cacm-2932 : <b>in</b> terrelation <b>between</b> seemingly diverse problems <b>and</b> methods illustrative <b>examples</b> <b>of</b> practical <b>and</b> <b>theoretical</b> significance <b>are</b> given directions <b>for</b> new research <b>are</b> discussed cacm september 1977 
cacm-1135 : it stresses <b>the</b> structural analysis <b>of</b> <b>the</b> class <b>of</b> processes <b>to</b> be represented <b>in</b> <b>the</b> languages <b>as</b> <b>opposed</b> <b>to</b> emphasizing formal ie contents-independent 
cacm-2931 : explain what <b>are</b> <b>the</b> objects <b>of</b> computation <b>in</b> <b>a</b> way <b>the</b> statics <b>of</b> <b>the</b> problem <b>and</b> how they <b>are</b> <b>to</b> be transformed <b>the</b> dynamics so far <b>the</b> theories <b>of</b> automata <b>and</b> <b>of</b> nets though most <b>in</b> teresting <b>for</b> dynamics have formalized only 
cacm-2939 : an <b>in</b> troduction <b>to</b> <b>the</b> abstraction <b>mechanisms</b> <b>in</b> clu by means <b>of</b> programming <b>examples</b> <b>the</b> utility <b>of</b> <b>the</b> three kinds <b>of</b> abstractions <b>in</b> program construction is illustrated 
cacm-3049 : sembegs is easy <b>to</b> extend <b>and</b> modify <b>to</b> meet <b>the</b> growing needs <b>of</b> <b>a</b> large batch environment <b>and</b> is even extendable <b>to</b> <b>a</b> fully interactive system <b>the</b> paper presents <b>the</b> conceptual view <b>of</b> graphics leading <b>to</b> <b>the</b> design <b>of</b> sembegs <b>and</b> outlines <b>the</b> major components <b>of</b> <b>the</b> system <b>the</b> design <b>of</b> sembegs is founded upon 
cacm-1742 : <b>on</b> <b>the</b> design <b>of</b> display processors <b>the</b> flexibility <b>and</b> power needed <b>in</b> <b>the</b> data channel <b>for</b> <b>a</b> computer display <b>are</b> considered <b>to</b> <b>work</b> efficiently such <b>a</b> channel must have <b>a</b> sufficient number <b>of</b> instructions that it is 
cacm-2500 : have <b>not</b> been incorporated <b>in</b> <b>the</b> running system due <b>to</b> <b>the</b> infrequency <b>of</b> deadlock situations cacm may 
cacm-3043 : networks <b>with</b> <b>distributed</b> storage <b>the</b> paper gives several <b>examples</b> <b>of</b> <b>distributed</b> processes <b>and</b> shows that they include 
cacm-2020 : made <b>to</b> clarify some <b>of</b> these misunderstandings <b>and</b> <b>to</b> highlight <b>the</b> advantages <b>and</b> disadvantages <b>and</b> <b>to</b> highlight <b>the</b> advantages <b>and</b> disadvantages <b>of</b> pricing two illustrative pricing 
cacm-1626 : is good <b>in</b> this environment <b>and</b> allows <b>for</b> <b>complete</b> compatibility <b>between</b> compiled <b>and</b> interpreted programs <b>with</b> no special declarations cacm 
cacm-2232 : review <b>of</b> <b>the</b> width concept <b>in</b> pattern recognition <b>and</b> <b>the</b> geometrical concept itself <b>the</b> object <b>of</b> <b>the</b> <b>work</b> is <b>to</b> clarify how <b>the</b> word description can be 
cacm-1536 : <b>a</b> simple way <b>to</b> compute <b>the</b> derivatives <b>of</b> <b>a</b> function <b>without</b> <b>the</b> need <b>for</b> deriving <b>and</b> programming <b>the</b> evaluation <b>of</b> explicit formulas <b>for</b> <b>the</b> derivatives cacm september 1967 
cacm-3128 : then several <b>examples</b> <b>of</b> its use <b>are</b> given <b>the</b> relationship <b>of</b> <b>the</b> mechanism <b>to</b> protection <b>mechanisms</b> <b>in</b> <b>the</b> system is explained <b>in</b> particular eventcounts <b>are</b> shown <b>to</b> be applicable <b>to</b> situations where confinement <b>of</b> information matters an implementation 
cacm-1534 : use <b>of</b> <b>the</b> drums <b>the</b> buffering <b>of</b> input <b>and</b> output <b>on</b> slow peripherals <b>and</b> <b>the</b> execution <b>of</b> normal job stack <b>work</b> <b>are</b> described <b>the</b> display subsystem is described 
cacm-2900 : locate copies <b>of</b> <b>a</b> file-is known <b>to</b> be <b>in</b> general polynomial <b>complete</b> heuristics <b>and</b> other aids <b>to</b> finding optimal <b>or</b> near-optimal solutions <b>are</b> therefore much needed <b>in</b> this paper we present 
cacm-2905 : <b>complete</b> <b>in</b> <b>the</b> above sense <b>but</b> it seems <b>to</b> give minimal <b>or</b> almost minimal tables <b>for</b> every kind <b>of</b> set <b>the</b> two techniques <b>are</b> applicable directly <b>to</b> small sets some methods 
cacm-2519 : <b>on</b> <b>the</b> problem <b>of</b> <b>communicating</b> complex information <b>the</b> nature <b>of</b> <b>the</b> difficulty involved <b>in</b> <b>communicating</b> mathematical results <b>between</b> scientists using <b>a</b> computer based information retrieval 
cacm-2457 : recursive programs <b>with</b> emphasis <b>on</b> <b>the</b> difference <b>between</b> <b>the</b> <b>theoretical</b> <b>and</b> practical approaches second presentation 
cacm-2627 : mean time <b>in</b> system is <b>not</b> only desirable <b>to</b> <b>the</b> user <b>but</b> it also tends <b>to</b> minimize at each point 
cacm-3056 : used <b>to</b> keep track <b>of</b> <b>as</b> many <b>as</b> 130,000 events <b>with</b> <b>a</b> relative error which is 
cacm-2342 : states which dictate <b>the</b> systems behavior <b>the</b> mutual exclusion problem <b>and</b> <b>the</b> associated subproblems <b>are</b> formulated <b>as</b> questions <b>of</b> inclusion <b>between</b> sets <b>of</b> states <b>or</b> <b>of</b> <b>the</b> existence <b>of</b> certain sequences <b>a</b> mechanical proof <b>procedure</b> is shown which will 
cacm-2054 : <b>the</b> <b>complete</b> terminal device input <b>to</b> <b>the</b> computer being provided <b>as</b> <b>a</b> sequence <b>of</b> spoken words <b>and</b> output <b>to</b> <b>the</b> user being audio responses 
cacm-1323 : by establishing <b>a</b> correspondence <b>between</b> expressions <b>of</b> algol 60 <b>and</b> expressions <b>in</b> <b>a</b> modified form <b>of</b> churchs l-notation first <b>a</b> model <b>for</b> computer languages <b>and</b> compute behavior is described 
cacm-1527 : <b>the</b> subject <b>of</b> this paper is <b>a</b> <b>procedure</b> <b>for</b> <b>the</b> automatic retrieval <b>of</b> certain segments <b>of</b> stored information either explicitly 
cacm-2684 : <b>in</b> providing <b>a</b> readable <b>and</b> <b>complete</b> formal definition <b>of</b> syntax <b>as</b> <b>a</b> practical illustration <b>a</b> small <b>but</b> significant subset <b>of</b> pl/i is considered <b>a</b> more detailed presentation <b>as</b> well <b>as</b> <b>the</b> application <b>to</b> define <b>abstract</b> syntax <b>and</b> translations <b>between</b> languages is given <b>in</b> <b>a</b> previous paper by <b>the</b> author cacm february 1974 
cacm-1012 : english is <b>a</b> concrete example <b>of</b> <b>a</b> directed production analyzer <b>and</b> <b>of</b> <b>a</b> working parsing algorithm <b>the</b> connection <b>between</b> structures assigned by <b>the</b> analyzer <b>and</b> those <b>of</b> <b>a</b> conventional phrase structure grammar 
cacm-1014 : machine controls <b>for</b> analysis <b>of</b> variance <b>a</b> major problem <b>in</b> using <b>the</b> analysis <b>of</b> variance <b>as</b> <b>the</b> number <b>of</b> factors increases is <b>the</b> exponential rise <b>in</b> <b>the</b> number <b>of</b> interactions even though <b>the</b> experimenter may <b>not</b> be <b>interested</b> <b>in</b> these interactions it is 
cacm-2742 : <b>are</b> presented all <b>of</b> which improve <b>in</b> effectiveness <b>as</b> <b>the</b> events-list scan problem becomes 
cacm-3064 : second part deals <b>with</b> <b>the</b> less apparent problem <b>of</b> providing efficiency <b>and</b> flexibility <b>as</b> scheduled events <b>are</b> accessed <b>to</b> be executed additional features 
cacm-3069 : be used <b>and</b> which <b>are</b> possibly preserved by <b>a</b> call <b>on</b> <b>the</b> <b>procedure</b> <b>and</b> all <b>of</b> its subcalls <b>the</b> algorithm is sufficiently powerful 
cacm-3103 : example <b>and</b> overview <b>the</b> use <b>of</b> several levels <b>of</b> abstraction has proved <b>to</b> be very helpful <b>in</b> constructing <b>and</b> maintaining programs when programs 
cacm-0409 : developed <b>and</b> realized <b>on</b> <b>the</b> ibm 709/7090 computer <b>the</b> system is based <b>on</b> <b>a</b> master file concept <b>and</b> has provisions <b>for</b> accepting storing <b>and</b> retrieving both <b>descriptions</b> <b>and</b> instances <b>of</b> large <b>and</b> complex data sets <b>as</b> well <b>as</b> algorithms defined <b>on</b> these data sets both 
cacm-1727 : mean value <b>of</b> <b>the</b> number <b>of</b> jumps from <b>the</b> i-th instruction <b>on</b> <b>to</b> <b>the</b> j-th instruction <b>in</b> <b>the</b> run time <b>in</b> <b>the</b> cases where <b>the</b> sij <b>are</b> estimated directly <b>the</b> structure <b>of</b> <b>the</b> whole program must be 
cacm-2767 : chosen <b>to</b> show <b>the</b> advantages <b>and</b> limitations <b>of</b> <b>the</b> algorithms <b>the</b> end-order tree algorithm is 
cacm-1099 : <b>for</b> programming <b>work</b> because <b>of</b> intense training <b>in</b> <b>and</b> constant experience <b>with</b> locating objects <b>in</b> <b>the</b> unseen environment <b>and</b> also because <b>of</b> superbly trained memory <b>the</b> blind brings <b>to</b> <b>the</b> <b>work</b> <b>of</b> programming skills which <b>the</b> sighted has had little 
cacm-2989 : features <b>are</b> evaluated <b>in</b> terms <b>of</b> <b>the</b> time used <b>or</b> saved by having <b>or</b> <b>not</b> having <b>the</b> feature <b>the</b> methods <b>are</b> based <b>on</b> analysis <b>of</b> traces <b>of</b> program executions <b>the</b> concept <b>of</b> <b>a</b> register life is <b>in</b> troduced <b>and</b> used <b>to</b> answer questions like how 
cacm-1485 : illustrate <b>the</b> forms described <b>the</b> advantages disadvantages <b>and</b> factors influencing <b>the</b> choice <b>of</b> <b>a</b> form <b>of</b> component <b>for</b> <b>a</b> language <b>are</b> discussed <b>and</b> <b>the</b> paper concludes <b>with</b> <b>the</b> suggestion that programming languages 
cacm-3081 : finally <b>the</b> concept <b>of</b> rerooting is shown <b>to</b> combine <b>the</b> concept <b>of</b> shallow binding <b>in</b> lisp <b>with</b> dijkstras display <b>for</b> algol <b>and</b> hence is <b>a</b> general model <b>for</b> shallow binding cacm july 
cacm-2969 : <b>for</b> <b>the</b> allocation <b>of</b> program <b>and</b> data files <b>in</b> <b>a</b> computer network is presented 
cacm-2406 : definition languages concentrate <b>on</b> <b>the</b> declaration <b>of</b> logical data structures <b>with</b> little concern <b>for</b> how these structures <b>are</b> physically realized <b>on</b> <b>a</b> computer system however <b>the</b> need <b>for</b> data definition languages which 
cacm-1143 : even <b>in</b> them it <b>would</b> therefore appear best <b>to</b> select <b>a</b> uniform technique both <b>for</b> running <b>the</b> experiments <b>and</b> <b>for</b> analyzing <b>the</b> data <b>and</b> then <b>to</b> consider <b>as</b> significant only relative results 
cacm-1145 : git-a heuristic program <b>for</b> testing pairs <b>of</b> directed line graphs <b>for</b> isomorphism given <b>a</b> pair <b>of</b> directed line graphs <b>the</b> problem <b>of</b> ascertaining whether <b>or</b> <b>not</b> they <b>are</b> isomorphic is one <b>for</b> which no efficient algorithmic 
cacm-1307 : composing commands <b>to</b> <b>the</b> computer <b>in</b> <b>the</b> system described <b>the</b> user is <b>not</b> required <b>to</b> learn <b>or</b> remember <b>the</b> vocabulary <b>of</b> <b>the</b> language because <b>the</b> vocabulary is displayed before 
cacm-1651 : editorial comments throughout <b>the</b> input deck <b>as</b> an aid <b>in</b> identification eg <b>of</b> row constraints <b>the</b> article includes <b>examples</b> <b>of</b> input output from <b>a</b> solution routine presently <b>in</b> use <b>and</b> <b>a</b> skeleton flowchart <b>of</b> <b>the</b> input interpreter cacm january 
cacm-1710 : <b>for</b> drawing asp structures <b>on</b> paper asp structures <b>are</b> built <b>and</b> manipulated by means <b>of</b> <b>a</b> series <b>of</b> macro <b>calls</b> which <b>are</b> outlined <b>in</b> <b>the</b> appendix emphasis is <b>on</b> <b>the</b> philosophy <b>of</b> <b>the</b> system <b>rather</b> than <b>a</b> particular implementation though sufficient 
cacm-2851 : <b>for</b> parallel computation <b>are</b> presented an <b>abstract</b> conceptual model <b>and</b> <b>a</b> parallel-program model <b>the</b> former model does <b>not</b> distinguish <b>between</b> control <b>and</b> data states <b>the</b> latter model includes <b>the</b> capability <b>for</b> <b>the</b> representation <b>of</b> an infinite set <b>of</b> control states by allowing 
cacm-1978 : easy <b>to</b> use <b>and</b> also take advantage <b>of</b> <b>the</b> insight <b>and</b> visual capabilities <b>of</b> <b>the</b> human problem solver several 
cacm-2383 : <b>and</b> some relevant theories <b>of</b> music <b>and</b> harmony <b>are</b> given problems <b>with</b> this kind <b>of</b> program <b>and</b> several schemes that <b>are</b> known <b>not</b> <b>to</b> <b>work</b> <b>are</b> discussed several previous computer 
cacm-2541 : paper explores <b>the</b> advantages <b>of</b> <b>the</b> concurrent design <b>of</b> <b>the</b> language operating system <b>and</b> machine via microcode <b>to</b> create an interactive programming 
cacm-2377 : also performed thus <b>a</b> call by <b>a</b> user <b>procedure</b> <b>to</b> <b>a</b> protected subsystem including <b>the</b> supervisor is identical <b>to</b> <b>a</b> call <b>to</b> <b>a</b> companion user <b>procedure</b> <b>the</b> <b>mechanisms</b> <b>of</b> passing <b>and</b> referencing arguments <b>are</b> <b>the</b> same <b>in</b> both cases <b>as</b> well cacm march 1972 
cacm-1665 : <b>as</b> input description <b>of</b> <b>the</b> multicharacter items <b>or</b> <b>of</b> words allowable <b>in</b> <b>a</b> language given <b>in</b> terms <b>of</b> <b>a</b> subset <b>of</b> regular expressions <b>the</b> output <b>of</b> <b>the</b> system is <b>a</b> lexical processor which reads 
cacm-2692 : convex windows polygons <b>to</b> be clipped <b>are</b> represented <b>as</b> an ordered sequence <b>of</b> vertices <b>without</b> repetition <b>of</b> first <b>and</b> last <b>in</b> marked contrast <b>to</b> representation <b>as</b> <b>a</b> collection <b>of</b> edges <b>as</b> was heretofore <b>the</b> common <b>procedure</b> output polygons have an 
cacm-1572 : do <b>not</b> respond <b>to</b> changes <b>in</b> <b>the</b> manner that intuition <b>would</b> suggest <b>and</b> there <b>are</b> few guides <b>to</b> assist <b>in</b> <b>the</b> analysis <b>of</b> performance characteristics <b>the</b> development <b>of</b> <b>a</b> comprehensive simulation model <b>to</b> assist <b>in</b> <b>the</b> investigation <b>of</b> these questions is described 
cacm-2359 : <b>the</b> time <b>to</b> locate <b>a</b> record is dependent <b>not</b> <b>on</b> <b>the</b> total volume <b>of</b> overflow records <b>as</b> <b>in</b> conventional isam <b>but</b> <b>on</b> <b>the</b> percentage use <b>of</b> space dedicated <b>to</b> overflow records cacm may 
cacm-2060 : algorithm <b>for</b> computing <b>or</b> accessing its components <b>the</b> existence <b>of</b> label variables permits <b>the</b> construction <b>of</b> coroutines quasi-parallel processes <b>and</b> other unorthodox control <b>mechanisms</b> <b>a</b> variety <b>of</b> programming <b>examples</b> illustrates <b>the</b> generality <b>of</b> <b>the</b> language limitations <b>and</b> possible extensions <b>are</b> discussed briefly cacm may 
cacm-2273 : extended entry <b>and</b> mixed entry tables <b>the</b> algorithms <b>are</b> based <b>on</b> <b>the</b> rule mask method <b>but</b> need <b>not</b> have <b>the</b> masks at execution time 
cacm-1379 : s2 where b1 <b>and</b> b2 <b>are</b> boolean expressions <b>and</b> s1 <b>and</b> s2 <b>are</b> basic statements <b>the</b> difficulty lies <b>in</b> whether <b>to</b> attach <b>the</b> else <b>to</b> <b>the</b> first if <b>or</b> <b>to</b> <b>the</b> second one existing solutions 
cacm-1272 : interpretation <b>and</b> expansion <b>of</b> computer output <b>in</b> such processes <b>as</b> factor analysis applications <b>are</b> described such processes <b>as</b> factor analysis applications <b>are</b> described such <b>as</b> <b>the</b> quick unbiased evaluation <b>of</b> <b>a</b> large volume <b>of</b> incoming mail <b>or</b> telegrams yielding summary reports 
cacm-0616 : represents <b>the</b> results <b>of</b> <b>the</b> first phase <b>of</b> <b>the</b> <b>work</b> <b>of</b> <b>the</b> language structure group <b>the</b> goal <b>of</b> this <b>work</b> is <b>to</b> arrive at <b>a</b> proper structure <b>for</b> <b>a</b> machine-independent problem-defining language at 
cacm-2848 : <b>a</b> structure <b>of</b> <b>complete</b> decision tables <b>but</b> <b>rather</b> sets <b>of</b> decision rules <b>the</b> purpose <b>of</b> this paper is <b>to</b> provide <b>a</b> <b>procedure</b> <b>for</b> synthesizing <b>the</b> decision rules <b>and</b> thus provide an aid 
cacm-1469 : <b>the</b> other is <b>the</b> choice <b>of</b> <b>the</b> <b>abstract</b> entities such <b>as</b> numbers character-strings lists <b>of</b> them functional relations among 
cacm-2840 : is <b>to</b> determine <b>in</b> <b>a</b> given situation whether <b>a</b> subject can acquire <b>a</b> particular right <b>to</b> an object <b>in</b> restricted cases it can 
cacm-1408 : incorporate engineering <b>or</b> hardware improvements <b>in</b> this paper <b>the</b> problem is attacked <b>not</b> by changing <b>the</b> drum <b>but</b> <b>rather</b> by modifying <b>the</b> manner <b>in</b> which it operates at 
cacm-0321 : <b>are</b> hard <b>to</b> learn <b>and</b> <b>to</b> use correctly <b>in</b> this paper some <b>of</b> <b>the</b> more obscure features <b>of</b> <b>the</b> language <b>are</b> considered <b>and</b> their usefulness is discussed 
cacm-2396 : <b>to</b> eliminate some interpretations <b>and</b> then employs <b>a</b> simplified semantic intersection <b>procedure</b> <b>to</b> find <b>a</b> valid interpretation <b>of</b> <b>the</b> input while <b>the</b> semantic processing is similar 
cacm-3105 : apply both <b>to</b> simple objects <b>and</b> <b>to</b> objects that <b>are</b> components <b>of</b> larger objects such <b>as</b> bank account records <b>in</b> <b>a</b> banks data base <b>the</b> constraints <b>are</b> stated declaratively <b>and</b> can be enforced by 
cacm-2558 : malfunctioning <b>are</b> described function-producing functions <b>and</b> various type-tagging schemes <b>are</b> considered an attempt is 
cacm-2940 : properties <b>of</b> <b>the</b> generators <b>for</b> such iterations <b>to</b> be expressed <b>in</b> <b>the</b> form <b>of</b> proof rules <b>are</b> developed results <b>are</b> obtained that <b>for</b> common special cases <b>of</b> these loops <b>are</b> essentially identical <b>to</b> <b>the</b> corresponding constructs <b>in</b> other languages <b>a</b> means <b>of</b> showing that <b>a</b> generator will terminate is 
cacm-1677 : <b>of</b> linkage <b>between</b> programs <b>and</b> from programs <b>to</b> data <b>and</b> basis <b>for</b> storage protection <b>the</b> application <b>of</b> labeled blocks may be 
cacm-3013 : step edges <b>but</b> <b>not</b> <b>to</b> ramps <b>the</b> first is similar <b>to</b> <b>the</b> digital laplacian <b>but</b> uses <b>the</b> max <b>rather</b> than <b>the</b> sum <b>of</b> <b>the</b> x <b>and</b> y second differences <b>the</b> second uses <b>the</b> difference <b>between</b> <b>the</b> mean <b>and</b> median gray levels <b>in</b> <b>a</b> neighborhood <b>the</b> outputs obtained from these 
cacm-1470 : <b>a</b> convenient alternative <b>to</b> <b>the</b> explicit call <b>the</b> three principal ways <b>of</b> getting inputs <b>for</b> routines <b>are</b> 1 by referring <b>to</b> <b>the</b> data itself 2 by 
cacm-1362 : <b>are</b> certain topics which <b>are</b> <b>not</b> truly concerned <b>with</b> code extension <b>but</b> which <b>are</b> often linked <b>with</b> it <b>in</b> discussion <b>on</b> code applications <b>the</b> material <b>in</b> this paper is equally 
cacm-3018 : is here shown <b>to</b> be equivalent <b>to</b> <b>the</b> problem <b>of</b> covering <b>the</b> edges <b>of</b> <b>a</b> graph by <b>complete</b> subgraphs <b>with</b> <b>the</b> objective <b>of</b> minimizing <b>the</b> number <b>of</b> <b>complete</b> subgraphs <b>a</b> relationship <b>between</b> this edge-clique-cover problem <b>and</b> <b>the</b> graph coloring problem is 
cacm-0724 : <b>of</b> <b>the</b> <b>work</b> offered <b>and</b> salary <b>are</b> principal determinants <b>in</b> accepting <b>a</b> new job programmers <b>are</b> less mobile than expected 
cacm-1550 : presented <b>and</b> <b>the</b> effects <b>of</b> having instant turnaround <b>a</b> few minutes <b>as</b> <b>opposed</b> <b>to</b> conventional batch processing <b>with</b> turnaround times <b>of</b> <b>a</b> few hours <b>are</b> examined among <b>the</b> items compared <b>are</b> <b>the</b> number <b>of</b> computer runs per trip 
cacm-1698 : <b>a</b> statistical model <b>for</b> console behavior <b>in</b> multiuser computers <b>the</b> ability <b>of</b> <b>a</b> computer system <b>to</b> communicate <b>with</b> <b>the</b> outside world efficiently is 
cacm-1916 : used <b>and</b> <b>in</b> addition data references <b>are</b> represented <b>in</b> <b>a</b> nondirected model <b>the</b> <b>complete</b> structural specification <b>of</b> <b>a</b> program is represented by 
cacm-2092 : processing system <b>are</b> described <b>and</b> exemplified <b>in</b> detail <b>the</b> system is written <b>in</b> lisp 1.5 <b>and</b> operates <b>on</b> <b>the</b> q-32 time-sharing system <b>the</b> systems data structures <b>and</b> their semantic organization <b>the</b> deductive question-answering formalism <b>of</b> relational properties <b>and</b> complex-relation-forming operators <b>and</b> <b>the</b> question-answering procedures which employ 
cacm-1253 : <b>a</b> programming guide <b>to</b> <b>the</b> language <b>but</b> <b>rather</b> an attempt <b>to</b> present its flavor <b>a</b> brief description <b>of</b> simscript is included <b>as</b> is <b>a</b> sufficient description <b>of</b> 20-gate <b>to</b> render this material understandable 
cacm-2958 : discusses <b>the</b> application <b>of</b> an algebraic technique <b>for</b> <b>the</b> specification <b>of</b> <b>abstract</b> data types among <b>the</b> <b>examples</b> presented is <b>a</b> top-down development <b>of</b> <b>a</b> symbol table <b>for</b> <b>a</b> block structured language <b>a</b> discussion <b>of</b> <b>the</b> proof <b>of</b> its correctness is given 
cacm-2895 : specifications <b>are</b> constrain ts <b>on</b> <b>the</b> order <b>in</b> which events <b>of</b> <b>a</b> computation can occur <b>the</b> language is used <b>to</b> write specifications <b>of</b> <b>the</b> readers/writers problem <b>and</b> <b>the</b> writer priority <b>of</b> <b>the</b> second readers/writers problem cacm 
cacm-2522 : <b>the</b> design implementation <b>and</b> evaluation <b>of</b> <b>a</b> working set dispatcher <b>the</b> behavior <b>of</b> <b>a</b> computer system is largely 
cacm-3141 : improvement <b>to</b> lelanns algorithm <b>for</b> finding <b>the</b> largest <b>or</b> smallest <b>of</b> <b>a</b> set <b>of</b> uniquely numbered processes arranged 
cacm-2721 : <b>to</b> certain types <b>of</b> chemical <b>and</b> thermal pollution <b>as</b> an investigation <b>of</b> <b>the</b> accuracy <b>of</b> <b>the</b> simulation methods <b>a</b> simulation <b>of</b> <b>the</b> actual population dynamics <b>of</b> asterionella <b>in</b> <b>the</b> columbia river was made 
cacm-2865 : is <b>in</b> some sense <b>complete</b> <b>for</b> partial correctness <b>a</b> crucial axiom provides <b>for</b> <b>the</b> use <b>of</b> auxiliary variables which <b>are</b> added <b>to</b> <b>a</b> parallel program <b>as</b> an aid <b>to</b> proving it correct <b>the</b> information <b>in</b> <b>a</b> partial correctness proof can 
cacm-2314 : overview <b>of</b> <b>a</b> number <b>of</b> system features which <b>the</b> author feels <b>are</b> important <b>to</b> improve <b>the</b> productivity <b>of</b> programmers working <b>in</b> such domains <b>a</b> system view it taken 
cacm-0040 : essential <b>for</b> <b>communicating</b> <b>between</b> man <b>and</b> <b>the</b> computer <b>in</b> applications requiring <b>the</b> processing <b>of</b> <b>a</b> large volume <b>of</b> inherently decimal input <b>and</b> output data <b>the</b> time <b>for</b> decimal-binary conversion needed by 
cacm-1846 : computer systems <b>on</b> <b>a</b> conventional digital computer <b>are</b> dealt <b>with</b> <b>the</b> systems <b>are</b> assumed <b>to</b> be described <b>as</b> <b>a</b> network <b>of</b> interconnected sequential processes briefly 
